name: Daily HTML Fetch & RSS Update

on:
  schedule:
    - cron: '35 6 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-page:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Fetch HTML pages
        run: |
          mkdir -p fetched-pages
          yq eval '.urls[] | [.name, .url] | @tsv' config.yml | while IFS=$'\t' read -r name url; do
            filename=$(echo "$name" | tr ' ' '_' | tr '[:upper:]' '[:lower:]').html
            echo "Fetching $name: $url"
            curl -sL "$url" > "fetched-pages/$filename"
          done

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Detect changes
        id: detect_changes
        run: |
          git add fetched-pages/
          CHANGED_FILES=""
          for file in fetched-pages/*.html; do
            if ! git diff --cached --exit-code "$file" > /dev/null 2>&1; then
              basename_file=$(basename "$file" .html)
              CHANGED_FILES="$CHANGED_FILES $basename_file"
            fi
          done
          if [ -n "$CHANGED_FILES" ]; then
            echo "changed=true" >> $GITHUB_ENV
            echo "changed_files=$CHANGED_FILES" >> $GITHUB_ENV
          fi

      - name: Generate and Update RSS
        if: env.changed == 'true'
        run: |
          LAST_COMMIT=$(git rev-parse HEAD)
          COMMIT_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          COMMIT_URL="https://github.com/${{ github.repository }}/commit/${LAST_COMMIT}"
          RSS_FILE="rss.xml"

          # Create RSS feed if it doesn't exist
          if [ ! -f "$RSS_FILE" ]; then
            echo "<?xml version=\"1.0\"?><rss version=\"2.0\"><channel><title>Page Alerts</title><link>https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/rss.xml</link><description>Updates to tracked HTML pages</description></channel></rss>" > "$RSS_FILE"
          fi

          # Process each changed file
          for changed_file in ${{ env.changed_files }}; do
            # Find the corresponding page name from config
            PAGE_NAME=$(yq eval ".urls[] | select(.name | test(\".*$(echo $changed_file | sed 's/_/ /g').*\"; \"i\")) | .name" config.yml | head -1)
            if [ -z "$PAGE_NAME" ]; then
              PAGE_NAME=$(echo "$changed_file" | sed 's/_/ /g' | sed 's/\b\w/\U&/g')
            fi

            TITLE="Page Updated: $PAGE_NAME"
            ITEM="<item><title>${TITLE}</title><link>${COMMIT_URL}</link><pubDate>${COMMIT_DATE}</pubDate></item>"
            sed -i "s|</channel>|${ITEM}</channel>|" "$RSS_FILE"
          done

          # Stage rss.xml too
          git add "$RSS_FILE"

      - name: Commit and Push changes
        if: env.changed == 'true'
        run: |
          git commit -m "Update fetched HTML pages and RSS feed"
          git push

